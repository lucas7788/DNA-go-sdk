package main

import (
	"encoding/hex"
	"fmt"
	DNA_go_sdk "github.com/DNAProject/DNA-go-sdk"
	"github.com/DNAProject/DNA-go-sdk/oep4"
	"github.com/DNAProject/DNA/common"
	"github.com/DNAProject/DNA/common/log"
	"math/big"
	"time"
)

func main() {

	sdk := DNA_go_sdk.NewDNASdk()
	sdk.NewRestClient().SetAddress("http://1.116.79.177:20334")
	gasPrice := uint64(500)
	gasLimit := uint64(2000000)
	wallet, err := sdk.OpenWallet("wallet.dat")
	checkErr(err)
	pwd := []byte("111111")

	acct, err := wallet.GetDefaultAccount(pwd)
	checkErr(err)
	// 刷存证
	if false {
		claimRecordContract := "5fc56b6c766b00527ac46c766b51527ac4616c766b00c306436f6d6d6974876c766b52527ac46c766b52c3647100616c766b51c3c0539c009c6c766b56527ac46c766b56c3640e00006c766b57527ac46232016c766b51c300c36c766b53527ac46c766b51c351c36c766b54527ac46c766b51c352c36c766b55527ac46c766b53c36c766b54c36c766b55c361527265fc006c766b57527ac462e9006c766b00c3065265766f6b65876c766b58527ac46c766b58c3645d00616c766b51c3c0529c009c6c766b5b527ac46c766b5bc3640e00006c766b57527ac462a8006c766b51c300c36c766b59527ac46c766b51c351c36c766b5a527ac46c766b59c36c766b5ac3617c6528026c766b57527ac46273006c766b00c309476574537461747573876c766b5c527ac46c766b5cc3644900616c766b51c3c0519c009c6c766b5e527ac46c766b5ec3640e00006c766b57527ac4622f006c766b51c300c36c766b5d527ac46c766b5dc361651b046c766b57527ac4620e00006c766b57527ac46203006c766b57c3616c756658c56b6c766b00527ac46c766b51527ac46c766b52527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681253797374656d2e53746f726167652e4765746c766b53527ac46c766b53c300a06c766b56527ac46c766b56c364440061616c766b00c309206578697374656421617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b57527ac462ee006154c56c766b54527ac46c766b54c36c766b00c3007cc46c766b54c351537cc46c766b54c36c766b51c3517cc46c766b54c36c766b52c3527cc46c766b54c361681853797374656d2e52756e74696d652e53657269616c697a656c766b55527ac461681953797374656d2e53746f726167652e476574436f6e746578746c766b00c36c766b55c3615272681253797374656d2e53746f726167652e50757461616c766b51c31320637265617465206e657720636c61696d3a206c766b00c3615272045075736854c1681553797374656d2e52756e74696d652e4e6f7469667961516c766b57527ac46203006c766b57c3616c756659c56b6c766b00527ac46c766b51527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681253797374656d2e53746f726167652e4765746c766b52527ac46c766b52c3009c6c766b55527ac46c766b55c364480061616c766b00c30d206e6f74206578697374656421617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b56527ac462a7016c766b52c361681a53797374656d2e52756e74696d652e446573657269616c697a656c766b53527ac46c766b53c353c3519c009c6c766b57527ac46c766b57c3644b0061616c766b00c31020696e76616c6964207374617475732e617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b56527ac4621c016c766b53c351c36c766b51c3617c65ac01009c6c766b58527ac46c766b58c364440061616c766b51c30920696e76616c69642e617c084572726f724d736753c1681553797374656d2e52756e74696d652e4e6f7469667961006c766b56527ac462b9006c766b53c300537cc46c766b53c361681853797374656d2e52756e74696d652e53657269616c697a656c766b54527ac461681953797374656d2e53746f726167652e476574436f6e746578746c766b00c36c766b54c3615272681253797374656d2e53746f726167652e50757461616c766b51c30f207265766f6b6520636c61696d3a206c766b00c3615272045075736854c1681553797374656d2e52756e74696d652e4e6f7469667961516c766b56527ac46203006c766b56c3616c756653c56b6c766b00527ac46161681953797374656d2e53746f726167652e476574436f6e746578746c766b00c3617c681253797374656d2e53746f726167652e4765746c766b51527ac4616c766b00c309207374617475733a206c766b51c3615272045075736854c1681553797374656d2e52756e74696d652e4e6f74696679616c766b51c36c766b52527ac46203006c766b52c3616c756657c56b6c766b00527ac46c766b51527ac4616c766b00c3c06c766b51c3c09c009c6c766b52527ac46c766b52c3640f0061006c766b53527ac4627900006c766b54527ac4624800616c766b00c36c766b54c3517f6c766b51c36c766b54c3517f9c009c6c766b55527ac46c766b55c3640e00006c766b53527ac4623800616c766b54c351936c766b54527ac46c766b54c36c766b00c3c09f6c766b56527ac46c766b56c363a3ff516c766b53527ac46203006c766b53c3616c7566"
		if false {
			txhash, err := sdk.NeoVM.DeployNeoVMSmartContract(gasPrice, gasLimit, acct, true, claimRecordContract,
				"ClaimRecord", "1.0", "claim record contract", "@ont.io", "this is a claim record contract")
			checkErr(err)
			fmt.Println("deploy txhahs: ", txhash.ToHexString())
		}
		code, _ := hex.DecodeString(claimRecordContract)
		contractAddr := common.AddressFromVmCode(code)
		sdk.NeoVM.ClaimRecord.ContractAddress = contractAddr
		//cc := wallet.GetIdentityCount()
		id, err := wallet.NewDefaultSettingIdentity(pwd)
		checkErr(err)
		id2, err := wallet.NewDefaultSettingIdentity(pwd)
		checkErr(err)
		claimId := "99b27be07c675b5c08bb9dd0d58a9881c1cf7925c1f70173b5c3c3d7f8d80252"
		txhash, err := sdk.NeoVM.ClaimRecord.SendCommit(id, pwd, id2.ID, claimId, acct, gasPrice, gasLimit)
		checkErr(err)
		fmt.Println("SendCommit txhash:", txhash.ToHexString())
		sdk.WaitForGenerateBlock(time.Second*40, 1)
		status, err := sdk.NeoVM.ClaimRecord.GetStatus(claimId)
		checkErr(err)
		fmt.Println("status:", status)
		return
	}
	//刷积分 合约
	if true {
		avm := "60c56b05322e302e306a00527ac4681953797374656d2e53746f726167652e476574436f6e746578746a51527ac40e5175616e6a69612d506f696e74736a52527ac40251506a53527ac4566a54527ac40340420f6a55527ac40400ca9a3b6a56527ac41400000000000000000000000000000000000000006a57527ac401016a58527ac401026a59527ac401036a5a527ac401046a5b527ac46c0120c56b6a00527ac46a51527ac46a52527ac46a51c304696e69747d9c7c75641a006a52c300c3516a00c3062e03000000006e6c75666203006a51c3046e616d657d9c7c75641500006a00c3063804000000006e6c75666203006a51c30673796d626f6c7d9c7c75641500006a00c3065004000000006e6c75666203006a51c308646563696d616c737d9c7c75641500006a00c3066804000000006e6c75666203006a51c30b746f74616c537570706c797d9c7c75641500006a00c3068204000000006e6c75666203006a51c30962616c616e63654f667d9c7c75642c006a52c3c0517d9c7c75f16a52c300c36a54527ac46a54c3516a00c306b504000000006e6c75666203006a51c3087472616e736665727d9c7c756446006a52c3c0537d9c7c75f16a52c300c36a55527ac46a52c351c36a56527ac46a52c352c36a57527ac46a57c36a56c36a55c3536a00c306fc04000000006e6c75666203006a51c30d7472616e736665724d756c74697d9c7c756418006a52c3516a00c3066806000000006e6c75666203006a51c30c7472616e7366657246726f6d7d9c7c756453006a52c3c0547d9c7c75f16a52c300c36a58527ac46a52c351c36a55527ac46a52c352c36a56527ac46a52c353c36a57527ac46a57c36a56c36a55c36a58c3546a00c306a007000000006e6c75666203006a51c309616c6c6f77616e63657d9c7c756439006a52c3c0527d9c7c75f16a52c300c36a59527ac46a52c351c36a58527ac46a58c36a59c3526a00c306a109000000006e6c75666203006a51c307617070726f76657d9c7c756446006a52c3c0537d9c7c75f16a52c300c36a59527ac46a52c351c36a58527ac46a52c352c36a57527ac46a57c36a58c36a59c3536a00c306e106000000006e6c7566620300006c75665cc56b6a00527ac46a51527ac46a52527ac46203006a00c35ac3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e4765746a53527ac46a53c3007d9c7c75f16a00c356c36a00c355c3956a54527ac46a54c36a00c35ac3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e5075746a54c36a00c358c36a52c37e681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e5075746a54c36a52c36a00c357c3087472616e7366657254c1681553797374656d2e52756e74696d652e4e6f74696679516c756656c56b6a00527ac46a51527ac46203006a00c352c36c756656c56b6a00527ac46a51527ac46203006a00c353c36c756656c56b6a00527ac46a51527ac46203006a00c354c300936c756656c56b6a00527ac46a51527ac46203006a00c35ac36a00c351c3681253797374656d2e53746f726167652e47657400936c756658c56b6a00527ac46a51527ac46a52527ac46203006a52c3c001147d9c7c75f16a00c358c36a52c37e6a00c351c3681253797374656d2e53746f726167652e47657400936c75665dc56b6a00527ac46a51527ac46a52527ac46a53527ac46a54527ac46203006a53c3c001147d9c7c75f16a52c3c001147d9c7c75f16a52c3681b53797374656d2e52756e74696d652e436865636b5769746e657373f16a54c3007da07c75f16a00c358c36a52c37e6a55527ac46a55c36a00c351c3681253797374656d2e53746f726167652e4765746a56527ac46a56c36a54c37da27c75f16a54c36a56c37d9c7c756425006a55c36a00c351c3681553797374656d2e53746f726167652e44656c6574656226006a56c36a54c3946a55c36a00c351c3681253797374656d2e53746f726167652e5075746a00c358c36a53c37e6a57527ac46a57c36a00c351c3681253797374656d2e53746f726167652e4765746a58527ac46a58c36a54c3936a57c36a00c351c3681253797374656d2e53746f726167652e5075746a54c36a53c36a52c3087472616e7366657254c1681553797374656d2e52756e74696d652e4e6f74696679516c75665bc56b6a00527ac46a51527ac46a52527ac4620300006a53527ac46a52c36a54527ac46a54c3c06a55527ac46a53c36a55c39f6442006a54c36a53c3c36a56527ac46a53c351936a53527ac46a56c3c0537d9c7c75f16a56c352c36a56c351c36a56c300c3536a00c306fc04000000006ef162baff516c75665bc56b6a00527ac46a51527ac46a52527ac46a53527ac46a54527ac46203006a52c3c001147d9c7c75f16a53c3c001147d9c7c75f16a52c3681b53797374656d2e52756e74696d652e436865636b5769746e657373f16a54c3007da27c75f16a00c359c36a52c37e6a53c37e6a55527ac46a54c36a55c36a00c351c3681253797374656d2e53746f726167652e5075746a54c36a53c36a52c308617070726f76616c54c1681553797374656d2e52756e74696d652e4e6f74696679516c75660111c56b6a00527ac46a51527ac46a52527ac46a53527ac46a54527ac46a55527ac46203006a54c3c001147d9c7c75f16a53c3c001147d9c7c75f16a52c3c001147d9c7c75f16a55c3007da27c75f16a52c3681b53797374656d2e52756e74696d652e436865636b5769746e657373f16a00c358c36a53c37e6a56527ac46a56c36a00c351c3681253797374656d2e53746f726167652e4765746a57527ac46a57c36a55c37da27c75f16a00c359c36a53c37e6a52c37e6a58527ac46a58c36a00c351c3681253797374656d2e53746f726167652e4765746a59527ac46a00c358c36a54c37e6a5a527ac46a59c36a55c37da27c75f16a55c36a59c37d9c7c756448006a58c36a00c351c3681553797374656d2e53746f726167652e44656c6574656a57c36a55c3946a56c36a00c351c3681253797374656d2e53746f726167652e5075746249006a59c36a55c3946a58c36a00c351c3681253797374656d2e53746f726167652e5075746a57c36a55c3946a56c36a00c351c3681253797374656d2e53746f726167652e5075746a5ac36a00c351c3681253797374656d2e53746f726167652e4765746a5b527ac46a5bc36a55c3936a5ac36a00c351c3681253797374656d2e53746f726167652e5075746a55c36a54c36a53c3087472616e7366657254c1681553797374656d2e52756e74696d652e4e6f74696679516c75665ac56b6a00527ac46a51527ac46a52527ac46a53527ac46203006a00c359c36a52c37e6a53c37e6a54527ac46a54c36a00c351c3681253797374656d2e53746f726167652e47657400936c7566"
		code, _ := hex.DecodeString(avm)
		contractAddr := common.AddressFromVmCode(code)
		deployCode, err := sdk.GetSmartContract(contractAddr.ToHexString())
		if err != nil || deployCode == nil {
			txhash, err := sdk.NeoVM.DeployNeoVMSmartContract(gasPrice, gasLimit, acct, true, avm,
				"Quanjia-Points", "1.0", "quanjia supermarkets", "@quanjia.com", "quan jia is a cool supermarket")
			checkErr(err)
			fmt.Println("deploy txhahs: ", txhash.ToHexString())
			sdk.WaitForGenerateBlock(time.Second*40, 1)
			txhash, err = sdk.NeoVM.InvokeNeoVMContract(gasPrice, gasLimit, acct, contractAddr, []interface{}{"init", []interface{}{acct.Address}})
			checkErr(err)
			sdk.WaitForGenerateBlock(time.Second*40, 1)
		}
		quanjia := oep4.NewOep4(contractAddr, sdk)
		count := wallet.GetAccountCount()
		var transferAmt = big.NewInt(1000)
		var ind, ind2 int
		var acct1, acct2 *DNA_go_sdk.Account
		var txHash common.Uint256
		for i := 0; i < 100000000; i++ {
			ind = i % count
			ind2 = (i + 1) % count
			acct1, err = wallet.GetAccountByIndex(ind+1, pwd)
			checkErr(err)
			acct2, err = wallet.GetAccountByIndex(ind2+1, pwd)
			checkErr(err)
			txHash, err = quanjia.Transfer(acct1, acct2.Address, transferAmt, gasPrice, gasLimit)
			checkErr(err)
			log.Info("from:%s,to:%s,amt:%s,txHash:%s", acct1.Address.ToBase58(), acct2.Address.ToBase58(), transferAmt.String(), txHash.ToHexString())
			time.Sleep(time.Second * 1)
		}
		return
	}

	// 刷ontid
	for i := 0; i < 10; i++ {
		acct, err := wallet.NewDefaultSettingAccount(pwd)
		fmt.Println("acct:", acct.Address.ToBase58())
		checkErr(err)
		id, err := wallet.NewDefaultSettingIdentity(pwd)
		checkErr(err)
		fmt.Println("id:", id.ID)
		controller, err := id.GetControllerById("1", pwd)
		checkErr(err)
		wallet.Save()
		txhash, err := sdk.Native.OntId.RegIDWithPublicKey(gasPrice, gasLimit,
			acct, id.ID, controller)
		checkErr(err)
		fmt.Println(txhash.ToHexString())
		sdk.WaitForGenerateBlock(time.Second*40, 1)
		evt, err := sdk.GetSmartContractEvent(txhash.ToHexString())
		checkErr(err)
		fmt.Println(evt.State)
	}
}

func checkErr(err error) {
	if err != nil {
		panic(err)
	}
}
